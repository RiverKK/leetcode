/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;
        
        ListNode* proend;
        ListNode* end=head;
        int count=1;
        while(end->next!=NULL){
            proend=end;
            end=end->next;
            count++;
        }
        ListNode* odd=head;
        ListNode* even=head->next;
        if(count%2==1){
            for(int i=0;i<count/2;i++){
                odd->next=even->next;
                end->next=even;
                even->next=NULL;
                odd=odd->next;
                even=odd->next;
                end=end->next;
            }
        }
        else{
            for(int i=0;i<count/2-1;i++){
                odd->next=even->next;
                proend->next=even;
                odd=odd->next;
                even=odd->next;
                proend=proend->next;
            }
            proend->next=end;
        }
        return head;
        
    }
};